<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>密码迷宫</title><atom:link href="https://code-maze.com/feed/" rel="self" type="application/rss+xml"></atom:link><link/> https://code-maze.com/<description>学习。代码。成功。</description><lastbuilddate> 2023 年 5 月 16 日星期二 06:35:17 +0000</lastbuilddate><language>英文</language><sy:updateperiod>每小时</sy:updateperiod><sy:updatefrequency>1个</sy:updatefrequency><image/><url>https://code-maze.com/wp-content/uploads/2020/01/Code-Maze-Favicon.png</url><title>密码迷宫</title><link/>https://code-maze.com/<width> 32</width><height> 32</height><item><title> ML.NET – C# 机器学习简介</title><link/>https://code-maze.com/csharp-mlnet-machine-learning-introduction/<comments> https://code-maze.com/csharp-mlnet-machine-learning-introduction/#respond</comments><dc:creator><![CDATA[Ivan Matec]]></dc:creator><pubDate> Tue, 16 May 2023 05:00:50 +0000</pubDate> <category><![CDATA[Algorithm]]></category><category><![CDATA[C#]]></category><category><![CDATA[AI]]></category><category><![CDATA[artificial intelligence]]></category><category><![CDATA[machine learning]]></category><category><![CDATA[ml.net]]></category><guid ispermalink="false"> https://code-maze.com/?p=88652 </guid><description><![CDATA[<p>在本文中，我们将概述机器学习并解释 ML.NET 如何实现它。我们将学习如何构建、训练和优化简单的机器学习模型。最后，我们将了解如何在实际应用中使用该模型。机器学习是最令人兴奋和发展最快的 […]</p><p>帖子<a rel="nofollow" href="https://code-maze.com/csharp-mlnet-machine-learning-introduction/">ML.NET – Introduction to Machine Learning With C#</a>首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/csharp-mlnet-machine-learning-introduction/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title> .NET 中的 URI 编码和解码</title><link/>https://code-maze.com/dotnet-uri-encode-and-decode/<comments> https://code-maze.com/dotnet-uri-encode-and-decode/#comments</comments><dc:creator><![CDATA[Code Maze]]></dc:creator><pubDate> Mon, 15 May 2023 05:00:50 +0000</pubDate> <category><![CDATA[C#]]></category><category><![CDATA[Web Development]]></category><category><![CDATA[.NET]]></category><category><![CDATA[.NET CORE]]></category><category><![CDATA[asp.net core]]></category><category><![CDATA[csharp]]></category><category><![CDATA[dotnetcore]]></category><category><![CDATA[URI Decode]]></category><category><![CDATA[URI Encode]]></category><guid ispermalink="false"> https://code-maze.com/?p=88650 </guid><description><![CDATA[<p>在本文中，我们将了解 URI 编码和解码以及我们如何使用 .NET 实现这一点。那么，让我们开始吧。什么是 URI 编码？只有某些字符在 URL 中有效。因此，我们有时需要对某些字符执行 URI 编码和解码，然后再通过 [...]</p><p> <a rel="nofollow" href="https://code-maze.com/dotnet-uri-encode-and-decode/">.NET 中的 URI 编码和解码</a>帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/dotnet-uri-encode-and-decode/feed/</wfw:commentrss><slash:comments> 1个</slash:comments></item><item><title>代码迷宫周刊 #172</title><link/> https://code-maze.com/code-maze-weekly-172/<comments> https://code-maze.com/code-maze-weekly-172/#respond</comments><dc:creator><![CDATA[Vladimir Pecanac]]></dc:creator><pubDate> Fri, 12 May 2023 09:24:51 +0000</pubDate> <category><![CDATA[Newsletter]]></category><category><![CDATA[.NET]]></category><category><![CDATA[newsletter]]></category><guid ispermalink="false"> https://code-maze.com/?p=89410 </guid><description><![CDATA[<p>每周 Code Maze 的第 172 期。查看本周的新内容并享受阅读乐趣。 .NET 和 C# 热门精选 避免在 .NET 应用程序中激增 DbContext 或 IQueryable [ardalis.com] 我们应该在整个应用程序中使用多少 DbContext 或 IQueryable？为什么不好？使用 IQueryable 的正确位置是什么？ […]</p><p> <a rel="nofollow" href="https://code-maze.com/code-maze-weekly-172/">Code Maze Weekly #172</a>帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/code-maze-weekly-172/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title>在 C# 中仅初始化 Setter</title><link/> https://code-maze.com/csharp-init-only-setter-properties/<comments> https://code-maze.com/csharp-init-only-setter-properties/#respond</comments><dc:creator><![CDATA[Code Maze]]></dc:creator><pubDate> Thu, 11 May 2023 05:00:45 +0000</pubDate> <category><![CDATA[C#]]></category><category><![CDATA[Init only setters]]></category><category><![CDATA[private set]]></category><category><![CDATA[properties]]></category><guid ispermalink="false"> https://code-maze.com/?p=88640 </guid><description><![CDATA[<p>在本文中，我们将深入探讨 C# 9.0 的一项很酷的新功能：Init 关键字。首先，我们将仔细看看这个功能是什么。然后，我们将探讨 Init 关键字的工作原理以及我们如何将它合并到我们的项目中。让我们开始吧！ [...] 中的 Init 关键字是什么</p><p><a rel="nofollow" href="https://code-maze.com/csharp-init-only-setter-properties/">Init Only Setters in C#</a>帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/csharp-init-only-setter-properties/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title> C# 中的多维数组与锯齿状数组</title><link/>https://code-maze.com/charp-multidimensional-jagged-array/<comments> https://code-maze.com/charp-multidimensional-jagged-array/#respond</comments><dc:creator><![CDATA[Dusko Mirkovic]]></dc:creator><pubDate> Wed, 10 May 2023 05:00:19 +0000</pubDate> <category><![CDATA[Array]]></category><category><![CDATA[C#]]></category><category><![CDATA[arrays in csharp]]></category><category><![CDATA[csharp]]></category><category><![CDATA[Jagged Array]]></category><category><![CDATA[Multidimensional array]]></category><category><![CDATA[Performance]]></category><guid ispermalink="false"> https://code-maze.com/?p=88338 </guid><description><![CDATA[<p>在 C# 中对多维数组建模的两种方法似乎存在相当多的混淆。我们将探讨差异和相似之处，希望能帮助您为您的项目选择最佳模型。如果您需要复习数组基础知识，可以查看文章 C# Back to [...]</p><p>帖子<a rel="nofollow" href="https://code-maze.com/charp-multidimensional-jagged-array/">多维数组与 C# 中的锯齿状数组</a>首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/charp-multidimensional-jagged-array/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title>在 ASP.NET Core Identity 中使用 UserManager 和 RoleManager 进行单元测试</title><link/>https://code-maze.com/aspnetcore-identity-testing-usermanager-rolemanager/<comments> https://code-maze.com/aspnetcore-identity-testing-usermanager-rolemanager/#respond</comments><dc:creator><![CDATA[Code Maze]]></dc:creator><pubDate> Tue, 09 May 2023 05:00:48 +0000</pubDate> <category><![CDATA[Testing]]></category><category><![CDATA[Web Development]]></category><category><![CDATA[Asp.NET Core Identity]]></category><category><![CDATA[RoleManager]]></category><category><![CDATA[Unit Testing]]></category><category><![CDATA[UserManager]]></category><guid ispermalink="false"> https://code-maze.com/?p=88333 </guid><description><![CDATA[<p>在本文中，我们将学习如何在 ASP.NET Core Identity 中使用 UserManager 和 RoleManager 执行单元测试。单元测试是软件开发中必不可少的实践，有助于确保代码的正确性和可靠性。在 ASP.NET Core Identity 的上下文中，单元测试变得更加重要，因为它涉及敏感的用户相关 [...]</p><p><a rel="nofollow" href="https://code-maze.com/aspnetcore-identity-testing-usermanager-rolemanager/">在 ASP.NET Core Identity 中使用 UserManager 和 RoleManager 进行单元测试的</a>帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/aspnetcore-identity-testing-usermanager-rolemanager/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title>在 .NET Core 中使用 JWT 和 Ocelot 保护微服务</title><link/>https://code-maze.com/dotnetcore-secure-microservices-jwt-ocelot/<comments> https://code-maze.com/dotnetcore-secure-microservices-jwt-ocelot/#respond</comments><dc:creator><![CDATA[Phil Broderick]]></dc:creator><pubDate> Mon, 08 May 2023 06:00:11 +0000</pubDate> <category><![CDATA[Web Development]]></category><category><![CDATA[API Gateway]]></category><category><![CDATA[C#]]></category><category><![CDATA[jwt]]></category><category><![CDATA[Microservices]]></category><category><![CDATA[Ocelot]]></category><category><![CDATA[security]]></category><guid ispermalink="false"> https://drafts.c​​ode-maze.com/?p=88327 </guid><description><![CDATA[<p>微服务是当今软件应用程序中常见的设计模式。此外，我们通常有某种 API 网关，例如 Ocelot，为我们的微服务消费者提供单一 API 并封装底层实现细节和处理身份验证，这通常是用 JWT 实现的。在这篇文章中，我们将探讨如何 […]</p><p><a rel="nofollow" href="https://code-maze.com/dotnetcore-secure-microservices-jwt-ocelot/">在 .NET Core 中使用 JWT 和 Ocelot 保护微服务</a>这一帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/dotnetcore-secure-microservices-jwt-ocelot/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title>代码迷宫周刊 #171</title><link/> https://code-maze.com/code-maze-weekly-171/<comments> https://code-maze.com/code-maze-weekly-171/#respond</comments><dc:creator><![CDATA[Vladimir Pecanac]]></dc:creator><pubDate> Fri, 05 May 2023 07:55:50 +0000</pubDate> <category><![CDATA[Newsletter]]></category><category><![CDATA[.NET]]></category><category><![CDATA[newsletter]]></category><guid ispermalink="false"> https://code-maze.com/?p=88635 </guid><description><![CDATA[<p>每周 Code Maze 的第 171 期。查看本周的新内容并享受阅读乐趣。 .NET 和 C# 热门精选 在 .NET 中阅读 exe 的 Windows 应用程序清单 [www.meziantou.net] 有时从清单文件中获取一些信息可能很有用。 Gérald Barré 向我们展示了如何在这个 [...]</p><p> <a rel="nofollow" href="https://code-maze.com/code-maze-weekly-171/">Code Maze Weekly #171</a>帖子首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/code-maze-weekly-171/feed/</wfw:commentrss><slash:comments> 0</slash:comments></item><item><title> C#中的ArrayList和List比较</title><link/>https://code-maze.com/csharp-arraylist-vs-list/<comments> https://code-maze.com/csharp-arraylist-vs-list/#comments</comments><dc:creator><![CDATA[Code Maze]]></dc:creator><pubDate> Fri, 05 May 2023 05:58:24 +0000</pubDate> <category><![CDATA[C#]]></category><category><![CDATA[ArrayList]]></category><category><![CDATA[list]]></category><category><![CDATA[List vs ArrayList]]></category><guid ispermalink="false"> https://drafts.c​​ode-maze.com/?p=88631 </guid><description><![CDATA[<p>在构建应用程序时，我们经常会遇到存储或检索对象的情况，而 .NET 提供了大量的存储选项来做到这一点。这些选项分为通用和非通用集合类型。在本文中，我们将看到两种这样的存储类型——ArrayList 和 List，并对它们进行比较。那么，让我们开始吧。 […]</p><p>文章<a rel="nofollow" href="https://code-maze.com/csharp-arraylist-vs-list/">ArrayList and List Comparsion in C#</a>最先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/csharp-arraylist-vs-list/feed/</wfw:commentrss><slash:comments> 1个</slash:comments></item><item><title>如何在 C# 中识别字符串是否为数字</title><link/>https://code-maze.com/csharp-identify-if-a-string-is-a-number/<comments> https://code-maze.com/csharp-identify-if-a-string-is-a-number/#comments</comments><dc:creator><![CDATA[Code Maze]]></dc:creator><pubDate> Thu, 04 May 2023 06:00:33 +0000</pubDate> <category><![CDATA[C#]]></category><category><![CDATA[csharp]]></category><category><![CDATA[Numbers]]></category><category><![CDATA[Regex]]></category><category><![CDATA[String]]></category><guid ispermalink="false"> https://code-maze.com/?p=87852 </guid><description><![CDATA[<p>在本文中，我们将学习一些不同的方法来识别字符串是否为 C# 中的数字，并将它们与基准进行比较以确定最快和最慢的方法。有了这个，让我们开始吧。使用 TryParse() 方法来识别字符串是否为数字在我们开始编码之前，让我们 [...]</p><p><a rel="nofollow" href="https://code-maze.com/csharp-identify-if-a-string-is-a-number/">如何在 C# 中识别字符串是否为数字一文</a>首先出现在<a rel="nofollow" href="https://code-maze.com">Code Maze</a>上。</p> ]]>;</description><wfw:commentrss> https://code-maze.com/csharp-identify-if-a-string-is-a-number/feed/</wfw:commentrss><slash:comments> 2个</slash:comments></item></channel></rss>